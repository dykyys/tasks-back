{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Tasks app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of tasks app"
  },
  "servers": [
    {
      "url": "https://tasks-back-9h2m.onrender.com/"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Access token generation"
    },
    {
      "name": "Tasks",
      "description": "Operations with tasks collection"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register User",
        "operationId": "registerUser",
        "description": "Register User in the Application",
        "security": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "description": "User Email",
                    "type": "string",
                    "example": "joker@gmai.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered a user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "2zQaqOpj5WrfbR32j0UAh7WAtaIoaRYkYNVZKg6T"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get list of task",
        "operationId": "getTasks",
        "description": "Get list of tasks with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "todo",
                "in-progress",
                "review",
                "done",
                "blocked",
                "canceled"
              ],
              "example": "todo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found tasks!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found tasks!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/task"
                          }
                        },
                        "page": {
                          "type": "number",
                          "example": 1
                        },
                        "perPage": {
                          "type": "number",
                          "example": 10
                        },
                        "totalItems": {
                          "type": "number",
                          "example": 21
                        },
                        "totalPages": {
                          "type": "number",
                          "example": 3
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create task",
        "operationId": "createTasks",
        "description": "Create a task with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "description",
                  "status"
                ],
                "properties": {
                  "title": {
                    "description": "Task's title",
                    "type": "string",
                    "example": "Docs"
                  },
                  "description": {
                    "description": "Task's description",
                    "type": "string",
                    "example": "Update API documentation"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "todo",
                      "in-progress",
                      "review",
                      "done",
                      "canceled",
                      "blocked"
                    ],
                    "example": "todo"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a task",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a task!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/task"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Get task by id",
        "operationId": "getTask",
        "description": "Get task by id. Please provide only valid mongodb id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384",
              "description": "Please provide only valid MongoDB id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get task by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found task with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/task"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Tasks"
        ],
        "summary": "Patch task by id",
        "operationId": "patchTask",
        "description": "Patch task by id. Please provide only valid mongodb id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "678bf8af14d55985f0900f6e"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Docs"
                  },
                  "description": {
                    "type": "string",
                    "example": "Update API documentation"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "todo",
                      "in-progress",
                      "review",
                      "done",
                      "canceled",
                      "blocked"
                    ],
                    "example": "todo"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated task",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found and update task with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/task"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Delete task by id",
        "operationId": "deleteTask",
        "description": "Delete task by id. Please provide only valid mongodb id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384",
              "description": "Please provide only valid MongoDB id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Contact task successfully."
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Task not found."
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "task": {
        "type": "object",
        "required": [
          "_id",
          "title",
          "description",
          "status"
        ],
        "properties": {
          "_id": {
            "description": "Tasks's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "title": {
            "description": "Tasks's title",
            "type": "string",
            "example": "Docs"
          },
          "description": {
            "description": "Tasks's title",
            "type": "string",
            "example": "Update API documentation"
          },
          "status": {
            "description": "Tasks's status",
            "type": "string",
            "enum": [
              "todo",
              "in-progress",
              "review",
              "done",
              "blocked",
              "canceled"
            ]
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}